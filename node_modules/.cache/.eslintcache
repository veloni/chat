[{"/home/egor/Документы/Chat/my-app/src/index.js":"1","/home/egor/Документы/Chat/my-app/src/App.js":"2","/home/egor/Документы/Chat/my-app/src/reportWebVitals.js":"3","/home/egor/Документы/Chat/my-app/src/components/Body/Body.jsx":"4","/home/egor/Документы/Chat/my-app/src/components/Body/Header/Header.jsx":"5","/home/egor/Документы/Chat/my-app/src/components/Body/Footer/Footer.jsx":"6","/home/egor/Документы/Chat/my-app/src/components/Body/Aside/Aside.jsx":"7","/home/egor/Документы/Chat/my-app/src/components/Body/PopUpSelectSmile/PopUpSelectSmile.jsx":"8","/home/egor/Документы/Chat/my-app/src/components/Body/PopUpEditMessage/PopUpEditMessage.jsx":"9","/home/egor/Документы/Chat/my-app/src/components/Autorization.jsx":"10","/home/egor/Документы/Chat/my-app/src/components/Body/Hook/RenderMessage.jsx":"11","/home/egor/Документы/Chat/my-app/src/components/Body/Hook/loadMessageFirstEntreance.jsx":"12","/home/egor/Документы/Chat/my-app/src/components/Body/Hook/scrollBody.jsx":"13"},{"size":500,"mtime":1617015843069,"results":"14","hashOfConfig":"15"},{"size":511,"mtime":1617171860128,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1617015843069,"results":"17","hashOfConfig":"15"},{"size":10680,"mtime":1617214332911,"results":"18","hashOfConfig":"15"},{"size":1181,"mtime":1617209547982,"results":"19","hashOfConfig":"15"},{"size":2222,"mtime":1617207234488,"results":"20","hashOfConfig":"15"},{"size":1899,"mtime":1617205141090,"results":"21","hashOfConfig":"15"},{"size":677,"mtime":1617204685127,"results":"22","hashOfConfig":"15"},{"size":598,"mtime":1617121853257,"results":"23","hashOfConfig":"15"},{"size":2415,"mtime":1617169545105,"results":"24","hashOfConfig":"15"},{"size":1817,"mtime":1617197554247,"results":"25","hashOfConfig":"15"},{"size":1556,"mtime":1617203323071,"results":"26","hashOfConfig":"15"},{"size":152,"mtime":1617206857467,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"99whbw",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/egor/Документы/Chat/my-app/src/index.js",[],["60","61"],"/home/egor/Документы/Chat/my-app/src/App.js",[],"/home/egor/Документы/Chat/my-app/src/reportWebVitals.js",[],"/home/egor/Документы/Chat/my-app/src/components/Body/Body.jsx",["62","63","64","65","66","67","68","69"],"/home/egor/Документы/Chat/my-app/src/components/Body/Header/Header.jsx",["70"],"import React, { useEffect } from 'react';\n\nimport './Header.scss';\n\nconst Header = ({ \n\tsetSwitchChat, \n\tsetIsSearch, \n\tswitchСhat,\n\tscrollToBottom,\n}) => {\n\t\n\tconst clearStorage = () => {\n\t\tlocalStorage.clear();\n\t\twindow.location.reload();\n\t};\n\n\tconst switchChatToFun = () => {\n\t\tsetIsSearch(false);\n\t\tsetSwitchChat(true);\n\t\tscrollToBottom();\n\t}\n\n\tconst switchChatToFWork = () => {\n\t\tsetIsSearch(false);\n\t\tsetSwitchChat(false);\n\t\tscrollToBottom();\n\t}\n\t\n\treturn ( \n\t<div className=\"wrapper-header\">\n\t\t<div className=\"wrapper-info-chat\">\n\t\t\t<div className=\"header-wrapper-switch-chat\">\n\t\t\t\t\t<span \n\t\t\t\t\t\tclassName={`icon-chats ${!switchСhat ? 'active-chat-button' : '' }`}\n\t\t\t\t\t\tonClick={() => switchChatToFWork()}\n\t\t\t\t\t>\n\t\t\t\t\t\tРабочий чат\n\t\t\t\t\t</span>\n\t\t\t\t\t<span \n\t\t\t\t\t\tclassName={`icon-chats ${switchСhat ? 'active-chat-button' : '' }`}\n\t\t\t\t\t\tonClick={() => switchChatToFun()}\n\t\t\t\t\t>\n\t\t\t\t\t\tФлудильня\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t<div className=\"wrapper-button-clear-storage\">\n\t\t\t\t<button \n\t\t\t\t\tclassName=\"button-clear-storage\"\n\t\t\t\t\tonClick={() => clearStorage()}\n\t\t\t\t>\n\t\t\t\t\tClearStorage\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t);\n};\n\n\nexport default Header;\n","/home/egor/Документы/Chat/my-app/src/components/Body/Footer/Footer.jsx",["71"],"import React from 'react';\n\nimport iconAddFiles from './svg/addFile.svg';\nimport iconSmile from './svg/smile.svg';\nimport iconEdit from './svg/edit.svg';\nimport iconClose from './svg/close.svg'; \nimport iconBackground from './svg/background.svg'; \nimport iconSticker from './svg/sticker/sticker.png'; \n\nimport './Footer.scss';\n\nconst Footer = ({ \n\tsetLocalStorage, \n\taddMessage, \n\tinputMessage, \n\tstatePopUpSelectSmile, \n\tsetStatePopUpSelectSmile, \n\taddSticker, \n\teditTextState, \n\tcloseEditor,\n\tloadBackgroundImage,\n\tdeleteBackgroundImage,\n\tlengthСheck,\n}) => (\n\t<div className=\"wrapper-footer\">\n\t\t\t<div className=\"wrapper-icon-for-backgrond-image\">\n\t\t\t\t<div className=\"wrapper-icon-edit-delete\">\n\t\t\t\t\t<img \n\t\t\t\t\tsrc={iconBackground} \n\t\t\t\t\tclassName=\"icon-footer\" \n\t\t\t\t\talt=\"iconAddFiles\"\n\t\t\t\t\tonClick={() => loadBackgroundImage()}\n\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"wrapper-icon-edit-delete\">\n\t\t\t\t\t<img \n\t\t\t\t\t\tonClick={() => deleteBackgroundImage()}\n\t\t\t\t\t\tsrc={iconClose} \n\t\t\t\t\t\tclassName=\"icon-close\" \n\t\t\t\t\t\talt=\"iconAddFiles\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t</div>\n\t\t<div className=\"wrapper-text-area-message\">\n\t\t\t<textarea \n\t\t\t\tref={inputMessage}\n\t\t\t\tonChange={(e) => lengthСheck()}\n\t\t\t\tonKeyDown={(e) => addMessage(e)}\n\t\t\t\tclassName=\"text-area-message\"\n\t\t\t\tplaceholder=\"Write a message\"\n\t\t\t>\n\t\t\t</textarea>\n\t\t</div>\n\t\t{editTextState && (\n\t\t\t<div wrapper-icon-for-edit>\n\t\t\t\t<div className=\"wrapper-icon-edit-delete\">\n\t\t\t\t\t<img \n\t\t\t\t\t\tsrc={iconEdit} \n\t\t\t\t\t\tclassName=\"icon-edit\" \n\t\t\t\t\t\talt=\"iconAddFiles\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"wrapper-icon-edit-delete\">\n\t\t\t\t\t<img \n\t\t\t\t\t\tonClick={() => closeEditor()}\n\t\t\t\t\t\tsrc={iconClose} \n\t\t\t\t\t\tclassName=\"icon-close\" \n\t\t\t\t\t\talt=\"iconAddFiles\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)}\n\t\t<div className=\"wrapper-icon-footer\">\n\t\t\t<img \n\t\t\t\tonClick={() => setStatePopUpSelectSmile(!statePopUpSelectSmile)}\n\t\t\t\tsrc={iconSmile} \n\t\t\t\ttitle=\"smiles\"\n\t\t\t\tclassName=\"icon-footer\" \n\t\t\t\talt=\"iconAddFiles\"\n\t\t\t/>\n\t\t</div>\n\t\t<div className=\"wrapper-icon-footer\">\n\t\t\t<img \n\t\t\t\tonMouseDown={() => addSticker()}\n\t\t\t\tonMouseUp={() => setLocalStorage()}\n\t\t\t\ttitle=\"sticker\"\n\t\t\t\tsrc={iconSticker} \n\t\t\t\tclassName=\"icon-footer\" \n\t\t\t\talt=\"iconAddFiles\"\n\t\t\t/>\n\t\t</div>\n\t</div>\n);\n\nexport default Footer;","/home/egor/Документы/Chat/my-app/src/components/Body/Aside/Aside.jsx",[],"/home/egor/Документы/Chat/my-app/src/components/Body/PopUpSelectSmile/PopUpSelectSmile.jsx",[],"/home/egor/Документы/Chat/my-app/src/components/Body/PopUpEditMessage/PopUpEditMessage.jsx",[],"/home/egor/Документы/Chat/my-app/src/components/Autorization.jsx",["72"],"import React, { useState, useEffect } from 'react';\n\nimport './Autorization.scss';\n\nconst Autorization = ({ autorizaton, setAutorizaton }) => {\n\tconst [isSubmited, setIsSubmited] = useState(false);\n\tconst [loginValue, setLoginValue] = useState('admin');\n\tconst [passwordValue, setPasswordValue] = useState('admin');\n\n\tuseEffect(() => {\n\t\tconst localLogin = JSON.parse(localStorage.getItem('userLogin'));\n\t\tconst localPassword = JSON.parse(localStorage.getItem('userPassword'));\n\n\t\tif (localLogin !== loginValue && localPassword !== passwordValue) { return; };\n\n\t\tsetAutorizaton(true);\n \t}, []);\n\n  const checkLoginPass = () => {\n\t\tconst isLoginCorrect = loginValue === 'admin';\n\t\tconst isPasswordCorrect = passwordValue === 'admin';\n\t\tconst isAutorizationPassed = isLoginCorrect && isPasswordCorrect;\n\n\t\tsetIsSubmited(true);\n\n\t\tif (!isAutorizationPassed) { return; }\n\n\t\tlocalStorage.setItem('userLogin', JSON.stringify(loginValue));  \n\t\tlocalStorage.setItem('userPassword', JSON.stringify(passwordValue));  \n\t\tlocalStorage.setItem('entranceDone', JSON.stringify(true))\n\n    setAutorizaton(true);\n  };\n\n\tconst handleLoginChange = (value) => {\n\t\tsetIsSubmited(false);\n\t\tsetLoginValue(value);\n\t};\n\n\tconst handlePasswordChange = (value) => {\n\t\tsetIsSubmited(false);\n\t\tsetPasswordValue(value);\n\t};\n\n\tconst isWarningMessageVisible = isSubmited && !autorizaton;\n\n\treturn (\n\t\t<div className=\"wrapper-autorization\">\n\t\t\t<div className=\"box-autorization\">\n\t\t\t\t<span className=\"title-autorization\">\n\t\t\t\t\tAutorization\n\t\t\t\t</span>\n\t\t\t\t{isWarningMessageVisible && <span className=\"message\">\n\t\t\t\t\tincorect login or password\n\t\t\t\t</span>}\n\t\t\t\t<div className=\"wrapper-login-password\">\n\t\t\t\t\t<div className=\"wrapper-login\">\n\t\t\t\t\t\t<span className=\"text-autoriztion\">\n\t\t\t\t\t\t\tlogin\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"input-login\"\n\t\t\t\t\t\t\tdefaultValue={loginValue}\n\t\t\t\t\t\t\tonChange={(e) => handleLoginChange(e.target.value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t</input>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"wrapper-password\">\n\t\t\t\t\t<span className=\"text-autoriztion\">\n\t\t\t\t\t\t\tpassword\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"input-password\"\n\t\t\t\t\t\t\tdefaultValue={passwordValue}\n\t\t\t\t\t\t\tonChange={(e) => handlePasswordChange(e.target.value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t</input>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"autorization\"\n\t\t\t\t\t\tonClick={() => checkLoginPass()}\n\t\t\t\t\t>\n\t\t\t\t\tlogin\n\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Autorization;","/home/egor/Документы/Chat/my-app/src/components/Body/Hook/RenderMessage.jsx",["73"],"import React, { useRef } from 'react';\n\nconst RenderMessage = ({ \n\tworkChatHistory,\n\tfunChatHistory,\n\tcreatePopUp,\n\tswitchСhat,\n}) => {\n\t\t\n\treturn (\n\t\t<div className=\"wrapper-main-body\">\n\t\t\t{switchСhat && funChatHistory.map((item, key) => (\n\t\t\t\t<div \n\t\t\t\t\tkey={key}\n\t\t\t\t\tclassName=\"wrapper-message\"\n\t\t\t\t>\n\t\t\t\t\t<div \n\t\t\t\t\t\tid={item.id} \n\t\t\t\t\t\tclassName=\"wrapper-message-text\"\n\t\t\t\t\t\tonClick={(e) => createPopUp(e, item.id)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"wrapper-nick-message\">\n\t\t\t\t\t\t\t<div className=\"wrapper-nick-name\">\n\t\t\t\t\t\t\t\t{item.nickName}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{!item.isImg &&\n\t\t\t\t\t\t\t<span className=\"text-in-message\">\n\t\t\t\t\t\t\t\t{item.message}\n\t\t\t\t\t\t\t</span>}\n\t\t\t\t\t\t\t{item.isImg && \n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName=\"wrapper-sticker\"\n\t\t\t\t\t\t\t\tsrc={item.message}\n\t\t\t\t\t\t\t\talt={\"sticler\"}\n\t\t\t\t\t\t\t/>}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"wrapper-time-in-message\">\n\t\t\t\t\t\t\t<span className=\"time-in-message\">\n\t\t\t\t\t\t\t\t{item.date}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t))} \n\t\t\t{!switchСhat && workChatHistory.map((item, key) =>  (\n\t\t\t\t<div \n\t\t\t\t\tkey={key}\n\t\t\t\t\tclassName=\"wrapper-message\"\n\t\t\t\t>\n\t\t\t\t\t<div \n\t\t\t\t\t\tclassName=\"wrapper-message-text\"\n\t\t\t\t\t\tid={item.id} \n\t\t\t\t\t\tonClick={(e) => createPopUp(e, item.id)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"wrapper-nick-message\">\n\t\t\t\t\t\t\t<div className=\"wrapper-nick-name\">\n\t\t\t\t\t\t\t\t{item.nickName}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{!item.isImg &&\n\t\t\t\t\t\t\t\t<span className=\"text-in-message\">\n\t\t\t\t\t\t\t\t\t{item.message}\n\t\t\t\t\t\t\t\t</span>}\n\t\t\t\t\t\t\t{item.isImg && \n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName=\"wrapper-sticker\"\n\t\t\t\t\t\t\t\tsrc={item.message}\n\t\t\t\t\t\t\t\talt={\"sticler\"}\n\t\t\t\t\t\t\t\t/>}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"wrapper-time-in-message\">\n\t\t\t\t\t\t\t<span className=\"time-in-message\">\n\t\t\t\t\t\t\t\t{item.date}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t);\n};\nexport default RenderMessage;\n","/home/egor/Документы/Chat/my-app/src/components/Body/Hook/loadMessageFirstEntreance.jsx",["74"],"import React from 'react';\n\nconst loadMessageFirstEntreance = (isLoadMessage, setIsLoadMessage) => {\n  if (isLoadMessage) { return; }\n  const firstLoadMessageFunChat = [\n    {\n      date: \"12:02\", \n      message: \"Я вас категорически приветсвую 😄\",\n      isImg: false,\n      id: '0',\n      nickName: \"Владимир\",\n    },\n    {\n      date: \"12:25\",  \n      message: \"И я вас категорически приветсвую 😀\",\n      isImg: false,\n      id: '1',\n      nickName: \"Клим\",\n    },\n    {\n      date: \"20:20\", \n      message: \"Клим Климыч добрый вечер\",\n      isImg: false,\n      id: '2',\n      nickName: \"Сан Саныч\",\n    },\n  ];\n\n  const firstLoadMessageWorkChat = [\n      {\n        date: \"08:02\", \n        message: \"Опять сервак упал\",\n        isImg: false,\n        id: '0',\n        nickName: \"Сан Саныч\",\n      },\n      {\n        date: \"12:56\",  \n        message: \"Встань и иди\",\n        isImg: false,\n        id: '1',\n        nickName: \"Владимир\",\n      },\n      {\n        date: \"20:20\", \n        message: \"Ну что поделать\",\n        isImg: false,\n        id: '2',\n        nickName: \"Владимир\",\n      },\n      \n    ];\n\n  localStorage.setItem('funChat', JSON.stringify(firstLoadMessageFunChat));\n  localStorage.setItem('workChat', JSON.stringify(firstLoadMessageWorkChat));\n  localStorage.setItem('firstLoad', JSON.stringify(true));\n\n  setIsLoadMessage(true);\n};\n\nexport default loadMessageFirstEntreance;\n","/home/egor/Документы/Chat/my-app/src/components/Body/Hook/scrollBody.jsx",["75"],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":17,"column":30,"nodeType":"82","messageId":"83","endLine":17,"endColumn":52},{"ruleId":"84","severity":1,"message":"85","line":49,"column":5,"nodeType":"86","endLine":49,"endColumn":7,"suggestions":"87"},{"ruleId":"84","severity":1,"message":"88","line":53,"column":5,"nodeType":"86","endLine":53,"endColumn":7,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":154,"column":34,"nodeType":"92","messageId":"93","endLine":154,"endColumn":36},{"ruleId":"90","severity":1,"message":"94","line":157,"column":5,"nodeType":"95","messageId":"96","endLine":157,"endColumn":12},{"ruleId":"90","severity":1,"message":"91","line":173,"column":27,"nodeType":"92","messageId":"93","endLine":173,"endColumn":29},{"ruleId":"90","severity":1,"message":"94","line":175,"column":5,"nodeType":"95","messageId":"96","endLine":175,"endColumn":12},{"ruleId":"90","severity":1,"message":"94","line":189,"column":27,"nodeType":"92","messageId":"97","endLine":189,"endColumn":29},{"ruleId":"80","severity":1,"message":"98","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":26},{"ruleId":"80","severity":1,"message":"99","line":3,"column":8,"nodeType":"82","messageId":"83","endLine":3,"endColumn":20},{"ruleId":"84","severity":1,"message":"100","line":17,"column":6,"nodeType":"86","endLine":17,"endColumn":8,"suggestions":"101"},{"ruleId":"80","severity":1,"message":"102","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":23},{"ruleId":"80","severity":1,"message":"103","line":1,"column":8,"nodeType":"82","messageId":"83","endLine":1,"endColumn":13},{"ruleId":"80","severity":1,"message":"103","line":1,"column":8,"nodeType":"82","messageId":"83","endLine":1,"endColumn":13},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'setIsBackgroundMessage' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isLoadMessage'. Either include it or remove the dependency array.","ArrayExpression",["106"],"React Hook useEffect has a missing dependency: 'firstLoadBackgroundMessage'. Either include it or remove the dependency array.",["107"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","expectedInside","'useEffect' is defined but never used.","'iconAddFiles' is defined but never used.","React Hook useEffect has missing dependencies: 'loginValue', 'passwordValue', and 'setAutorizaton'. Either include them or remove the dependency array. If 'setAutorizaton' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["108"],"'useRef' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [isLoadMessage]",{"range":"115","text":"116"},"Update the dependencies array to be: [firstLoadBackgroundMessage]",{"range":"117","text":"118"},"Update the dependencies array to be: [loginValue, passwordValue, setAutorizaton]",{"range":"119","text":"120"},[1861,1863],"[isLoadMessage]",[1922,1924],"[firstLoadBackgroundMessage]",[590,592],"[loginValue, passwordValue, setAutorizaton]"]