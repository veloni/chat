{"ast":null,"code":"var _jsxFileName = \"/home/egor/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Chat/my-app/src/components/Body/Body.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport Header from './Header/Header';\nimport Footer from './Footer/Footer';\nimport Aside from './Aside/Aside';\nimport './Body.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Body = () => {\n  _s();\n\n  const [switchСhat, setSwitchChat] = useState([]);\n  const [funChatHistory, setFunChatHistory] = useState([]);\n  useEffect(() => {\n    let localHistory = JSON.parse(localStorage.getItem('funChat'));\n    !!localHistory && setFunChatHistory(localHistory);\n  }, []);\n\n  const addMessage = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      setFunChatHistory([...funChatHistory, {\n        date: giveDate(),\n        message: e.target.value\n      }]);\n      localStorage.setItem('funChat', JSON.stringify(funChatHistory));\n    }\n  };\n\n  const giveDate = () => {\n    const date = new Date();\n    const hour = date.getHours();\n    const min = date.getMinutes();\n    return `${hour}:${min}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper-main\",\n    children: [/*#__PURE__*/_jsxDEV(Aside, {\n      switchСhat: switchСhat,\n      setSwitchChat: setSwitchChat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper-header-body\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-body\",\n        children: funChatHistory.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper-all-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        addMessage: addMessage,\n        switchСhat: switchСhat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Body, \"BU6ruUSNNYN7vMn7JCo9aDvPBxQ=\");\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["/home/egor/Документы/Chat/my-app/src/components/Body/Body.jsx"],"names":["React","useRef","useState","useEffect","Header","Footer","Aside","Body","switchСhat","setSwitchChat","funChatHistory","setFunChatHistory","localHistory","JSON","parse","localStorage","getItem","addMessage","e","key","preventDefault","date","giveDate","message","target","value","setItem","stringify","Date","hour","getHours","min","getMinutes","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AAEA,OAAO,aAAP;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,UAAD,EAAcC,aAAd,IAA+BP,QAAQ,CAAC,EAAD,CAA7C;AAEA,QAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,EAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIS,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAnB;AACA,KAAC,CAACJ,YAAF,IAAkBD,iBAAiB,CAACC,YAAD,CAAnC;AACC,GAHO,EAGL,EAHK,CAAT;;AAKA,QAAMK,UAAU,GAAIC,CAAD,IAAO;AACzB,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACtBD,MAAAA,CAAC,CAACE,cAAF;AAEAT,MAAAA,iBAAiB,CAAC,CACjB,GAAGD,cADc,EAEjB;AACEW,QAAAA,IAAI,EAAEC,QAAQ,EADhB;AAECC,QAAAA,OAAO,EAAEL,CAAC,CAACM,MAAF,CAASC;AAFnB,OAFiB,CAAD,CAAjB;AAOAV,MAAAA,YAAY,CAACW,OAAb,CAAqB,SAArB,EAAgCb,IAAI,CAACc,SAAL,CAAejB,cAAf,CAAhC;AACA;AACD,GAbD;;AAeA,QAAMY,QAAQ,GAAG,MAAM;AACtB,UAAMD,IAAI,GAAG,IAAIO,IAAJ,EAAb;AACA,UAAMC,IAAI,GAAGR,IAAI,CAACS,QAAL,EAAb;AACA,UAAMC,GAAG,GAAGV,IAAI,CAACW,UAAL,EAAZ;AAEA,WAAS,GAAEH,IAAK,IAAGE,GAAI,EAAvB;AACA,GAND;;AAQA,sBACC;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACC,QAAC,KAAD;AACC,MAAA,UAAU,EAAEvB,UADb;AAEC,MAAA,aAAa,EAAEC;AAFhB;AAAA;AAAA;AAAA;AAAA,YADD,eAKC;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBACEC,cAAc,CAACuB,GAAf,CAAoBC,IAAD,iBACnB;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,kCACC;AAAA,sBACEA,IAAI,CAACX;AADP;AAAA;AAAA;AAAA;AAAA,kBADD,eAIC;AAAA,sBACEW,IAAI,CAACb;AADP;AAAA;AAAA;AAAA;AAAA,kBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA;AADF;AAAA;AAAA;AAAA;AAAA,cAFD,eAeC,QAAC,MAAD;AACC,QAAA,UAAU,EAAEJ,UADb;AAEC,QAAA,UAAU,EAAET;AAFb;AAAA;AAAA;AAAA;AAAA,cAfD;AAAA;AAAA;AAAA;AAAA;AAAA,YALD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA4BA,CA7DD;;GAAMD,I;;KAAAA,I;AA+DN,eAAeA,IAAf","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\n\nimport Header from './Header/Header'\nimport Footer from './Footer/Footer'\nimport Aside from './Aside/Aside'\n\nimport './Body.scss';\n\nconst Body = () => {\n\tconst [switchСhat , setSwitchChat] = useState([]);\n\n\tconst [funChatHistory, setFunChatHistory] = useState([]);\n\n\tuseEffect(() => {\n\t\tlet localHistory = JSON.parse(localStorage.getItem('funChat'));\n\t\t!!localHistory && setFunChatHistory(localHistory);\n  }, []);\n\n\tconst addMessage = (e) => {\n\t\tif (e.key === 'Enter') {\n\t\t\te.preventDefault();\n\n\t\t\tsetFunChatHistory([\n\t\t\t\t...funChatHistory, \n\t\t\t\t{\n\t\t\t \t\tdate: giveDate(), \n\t\t\t\t\tmessage: e.target.value,\n\t\t\t\t},\n\t\t\t]);\n\t\t\tlocalStorage.setItem('funChat', JSON.stringify(funChatHistory));\n\t\t}\n\t};\n\n\tconst giveDate = () => {\n\t\tconst date = new Date();\n\t\tconst hour = date.getHours();\n\t\tconst min = date.getMinutes();\n\n\t\treturn (`${hour}:${min}`);\n\t};\n\t\n\treturn (\n\t\t<div className=\"wrapper-main\">\n\t\t\t<Aside\n\t\t\t\tswitchСhat={switchСhat}\n\t\t\t\tsetSwitchChat={setSwitchChat}\n\t\t\t/>\n\t\t\t<div className=\"wrapper-header-body\">\n\t\t\t\t<Header/>\n\t\t\t\t<div className=\"main-body\">\n\t\t\t\t\t{funChatHistory.map((item) => (\n\t\t\t\t\t\t<div className=\"wrapper-all-message\">\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{item.message}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{item.date}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))} \n\t\t\t\t</div>\n\n\t\t\t\t<Footer\n\t\t\t\t\taddMessage={addMessage}\n\t\t\t\t\tswitchСhat={switchСhat}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Body;"]},"metadata":{},"sourceType":"module"}