{"ast":null,"code":"var _jsxFileName = \"/home/egor/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Chat/my-app/src/components/Body/Body.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport Header from './Header/Header';\nimport Footer from './Footer/Footer';\nimport Aside from './Aside/Aside';\nimport PopUP from './PopUP/PopUP';\nimport './Body.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Body = () => {\n  _s();\n\n  const [mousePositionX, setMousePositionX] = useState();\n  const [mousePositionY, setMousePositionY] = useState();\n  const [statePopUp, setStatePopUp] = useState(false);\n  const [whatClick, setWhatClick] = useState(null);\n  const [editTextState, setEditTextState] = useState(false);\n  const [switchСhat, setSwitchChat] = useState(true);\n  const [funChatHistory, setFunChatHistory] = useState([]);\n  const [workChatHistory, setWorkChatHistory] = useState([]);\n  const mainBodyRef = useRef(null);\n  const inputMessage = useRef(null);\n  useEffect(() => {\n    if (switchСhat) {\n      renderData('workChat', setWorkChatHistory);\n    }\n\n    renderData('funChat', setFunChatHistory);\n  }, []);\n\n  const renderData = (key, setType) => {\n    let localHistory = JSON.parse(localStorage.getItem(key));\n    !!localHistory && setType(localHistory);\n  };\n\n  const addMessage = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n\n      if (!inputMessage.current.value) {\n        return;\n      }\n\n      if (editTextState) {\n        editerMessage();\n        return;\n      }\n\n      if (switchСhat) {\n        setData(funChatHistory, setFunChatHistory, 'funChat', e);\n      } else {\n        setData(workChatHistory, setWorkChatHistory, 'workChat', e);\n      }\n\n      inputMessage.current.value = '';\n    }\n  };\n\n  const setData = (typeChat, setTypeChat, key, e) => {\n    setTypeChat([...typeChat, {\n      date: giveDate(),\n      message: e.target.value,\n      id: typeChat.length\n    }]);\n    localStorage.setItem(key, JSON.stringify(typeChat));\n  };\n\n  const giveDate = () => {\n    const date = new Date();\n    const hour = date.getHours();\n    const min = date.getMinutes();\n    return `${hour}:${min}`;\n  };\n\n  const createPopUp = (e, id) => {\n    setWhatClick(id);\n    setMousePositionX(`${e.nativeEvent.pageX}px`);\n    setMousePositionY(`${e.nativeEvent.pageY}px`);\n    setStatePopUp(true);\n  };\n\n  const deleteMessage = () => {\n    setStatePopUp(false);\n    let localHistory;\n\n    if (switchСhat) {\n      localHistory = JSON.parse(localStorage.getItem('funChat'));\n    } else {\n      localHistory = JSON.parse(localStorage.getItem('workChat'));\n    }\n\n    localHistory.map(function (item, index) {\n      if (item.id === whatClick) {\n        localHistory.splice(index, 1);\n        return;\n      }\n    });\n\n    if (switchСhat) {\n      localStorage.setItem('funChat', JSON.stringify(localHistory));\n      renderData('funChat', setFunChatHistory);\n    } else {\n      localStorage.setItem('workChat', JSON.stringify(localHistory));\n      renderData('workChat', setWorkChatHistory);\n    }\n  };\n\n  const editMessage = () => {\n    setEditTextState(true);\n    setStatePopUp(false);\n    let localHistory;\n\n    if (switchСhat) {\n      localHistory = JSON.parse(localStorage.getItem('funChat'));\n    } else {\n      localHistory = JSON.parse(localStorage.getItem('workChat'));\n    }\n\n    localHistory.map(function (item) {\n      if (item.id === whatClick) {\n        inputMessage.current.value = item.message;\n      }\n    });\n  };\n\n  const editerMessage = () => {\n    let localHistory;\n\n    if (switchСhat) {\n      localHistory = JSON.parse(localStorage.getItem('funChat'));\n    } else {\n      localHistory = JSON.parse(localStorage.getItem('workChat'));\n    }\n\n    localHistory.map(function (item) {\n      if (item.id === whatClick) {\n        item.message = inputMessage.current.value;\n      }\n    });\n\n    if (switchСhat) {\n      localStorage.setItem('funChat', JSON.stringify(localHistory));\n      renderData('funChat', setFunChatHistory);\n    } else {\n      localStorage.setItem('workChat', JSON.stringify(localHistory));\n      renderData('workChat', setWorkChatHistory);\n    }\n\n    setEditTextState(false);\n    inputMessage.current.value = '';\n  };\n\n  const addSmile = () => {\n    inputMessage.current.innerText = String.fromCodePoint(0x1F354);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper-main\",\n    children: [statePopUp && /*#__PURE__*/_jsxDEV(PopUP, {\n      mousePositionX: mousePositionX,\n      mousePositionY: mousePositionY,\n      deleteMessage: deleteMessage,\n      editMessage: editMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Aside, {\n      setSwitchChat: setSwitchChat,\n      switchСhat: switchСhat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper-header-body\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-body\",\n        ref: mainBodyRef,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper-main-body\",\n          children: [switchСhat && funChatHistory.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrapper-message\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wrapper-message-text\",\n              onClick: e => createPopUp(e, item.id),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-in-message\",\n                children: item.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wrapper-time-in-message\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"time-in-message\",\n                  children: item.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 8\n          }, this)), !switchСhat && workChatHistory.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrapper-message\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wrapper-message-text\",\n              onClick: e => createPopUp(e, item.id),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-in-message\",\n                children: item.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wrapper-time-in-message\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"time-in-message\",\n                  children: item.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 8\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        addSmile: addSmile,\n        inputMessage: inputMessage,\n        addMessage: addMessage,\n        switchСhat: switchСhat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Body, \"r++fW9kxi0hPLERvPwXgw6CrBaU=\");\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["/home/egor/Документы/Chat/my-app/src/components/Body/Body.jsx"],"names":["React","useRef","useState","useEffect","Header","Footer","Aside","PopUP","Body","mousePositionX","setMousePositionX","mousePositionY","setMousePositionY","statePopUp","setStatePopUp","whatClick","setWhatClick","editTextState","setEditTextState","switchСhat","setSwitchChat","funChatHistory","setFunChatHistory","workChatHistory","setWorkChatHistory","mainBodyRef","inputMessage","renderData","key","setType","localHistory","JSON","parse","localStorage","getItem","addMessage","e","preventDefault","current","value","editerMessage","setData","typeChat","setTypeChat","date","giveDate","message","target","id","length","setItem","stringify","Date","hour","getHours","min","getMinutes","createPopUp","nativeEvent","pageX","pageY","deleteMessage","map","item","index","splice","editMessage","addSmile","innerText","String","fromCodePoint"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AAEA,OAAO,aAAP;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAElB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,EAApD;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,EAApD;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,IAAD,CAA1C;AAEA,QAAM,CAACe,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,KAAD,CAAlD;AAEA,QAAM,CAACiB,UAAD,EAAcC,aAAd,IAA+BlB,QAAQ,CAAC,IAAD,CAA7C;AACA,QAAM,CAACmB,cAAD,EAAiBC,iBAAjB,IAAsCpB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACqB,eAAD,EAAkBC,kBAAlB,IAAwCtB,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAMuB,WAAW,GAAGxB,MAAM,CAAC,IAAD,CAA1B;AACA,QAAMyB,YAAY,GAAGzB,MAAM,CAAC,IAAD,CAA3B;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIgB,UAAJ,EAAgB;AACfQ,MAAAA,UAAU,CAAC,UAAD,EAAaH,kBAAb,CAAV;AACA;;AACAG,IAAAA,UAAU,CAAC,SAAD,EAAYL,iBAAZ,CAAV;AACA,GALO,EAKL,EALK,CAAT;;AAOA,QAAMK,UAAU,GAAG,CAACC,GAAD,EAAMC,OAAN,KAAmB;AACrC,QAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBN,GAArB,CAAX,CAAnB;AACA,KAAC,CAACE,YAAF,IAAkBD,OAAO,CAACC,YAAD,CAAzB;AACA,GAHD;;AAKA,QAAMK,UAAU,GAAIC,CAAD,IAAO;AACzB,QAAIA,CAAC,CAACR,GAAF,KAAU,OAAd,EAAuB;AACtBQ,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAI,CAACX,YAAY,CAACY,OAAb,CAAqBC,KAA1B,EAAiC;AAAE;AAAS;;AAE5C,UAAItB,aAAJ,EAAmB;AAClBuB,QAAAA,aAAa;AACb;AACA;;AAED,UAAIrB,UAAJ,EAAgB;AACfsB,QAAAA,OAAO,CAACpB,cAAD,EAAiBC,iBAAjB,EAAoC,SAApC,EAA+Cc,CAA/C,CAAP;AACA,OAFD,MAEO;AACPK,QAAAA,OAAO,CAAClB,eAAD,EAAkBC,kBAAlB,EAAsC,UAAtC,EAAkDY,CAAlD,CAAP;AACC;;AAEDV,MAAAA,YAAY,CAACY,OAAb,CAAqBC,KAArB,GAA6B,EAA7B;AACA;AACD,GAlBD;;AAoBA,QAAME,OAAO,GAAG,CAACC,QAAD,EAAWC,WAAX,EAAwBf,GAAxB,EAA6BQ,CAA7B,KAAmC;AAClDO,IAAAA,WAAW,CAAC,CACX,GAAGD,QADQ,EAEX;AACCE,MAAAA,IAAI,EAAEC,QAAQ,EADf;AAECC,MAAAA,OAAO,EAAEV,CAAC,CAACW,MAAF,CAASR,KAFnB;AAGCS,MAAAA,EAAE,EAAEN,QAAQ,CAACO;AAHd,KAFW,CAAD,CAAX;AASAhB,IAAAA,YAAY,CAACiB,OAAb,CAAqBtB,GAArB,EAA0BG,IAAI,CAACoB,SAAL,CAAeT,QAAf,CAA1B;AACA,GAXD;;AAaA,QAAMG,QAAQ,GAAG,MAAM;AACtB,UAAMD,IAAI,GAAG,IAAIQ,IAAJ,EAAb;AACA,UAAMC,IAAI,GAAGT,IAAI,CAACU,QAAL,EAAb;AACA,UAAMC,GAAG,GAAGX,IAAI,CAACY,UAAL,EAAZ;AAEA,WAAS,GAAEH,IAAK,IAAGE,GAAI,EAAvB;AACA,GAND;;AAQA,QAAME,WAAW,GAAG,CAACrB,CAAD,EAAIY,EAAJ,KAAW;AAC9BhC,IAAAA,YAAY,CAACgC,EAAD,CAAZ;AAEAtC,IAAAA,iBAAiB,CAAE,GAAE0B,CAAC,CAACsB,WAAF,CAAcC,KAAM,IAAxB,CAAjB;AACA/C,IAAAA,iBAAiB,CAAE,GAAEwB,CAAC,CAACsB,WAAF,CAAcE,KAAM,IAAxB,CAAjB;AAEA9C,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,GAPD;;AASA,QAAM+C,aAAa,GAAG,MAAM;AAC3B/C,IAAAA,aAAa,CAAC,KAAD,CAAb;AACA,QAAIgB,YAAJ;;AAEA,QAAIX,UAAJ,EAAgB;AACfW,MAAAA,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAf;AACA,KAFD,MAEO;AACNJ,MAAAA,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAf;AACA;;AAEDJ,IAAAA,YAAY,CAACgC,GAAb,CAAiB,UAASC,IAAT,EAAeC,KAAf,EAAsB;AACtC,UAAID,IAAI,CAACf,EAAL,KAAYjC,SAAhB,EAA2B;AAC1Be,QAAAA,YAAY,CAACmC,MAAb,CAAoBD,KAApB,EAA2B,CAA3B;AACA;AACA;AACD,KALD;;AAOA,QAAI7C,UAAJ,EAAgB;AACfc,MAAAA,YAAY,CAACiB,OAAb,CAAqB,SAArB,EAAgCnB,IAAI,CAACoB,SAAL,CAAerB,YAAf,CAAhC;AACEH,MAAAA,UAAU,CAAC,SAAD,EAAYL,iBAAZ,CAAV;AACF,KAHD,MAGO;AACNW,MAAAA,YAAY,CAACiB,OAAb,CAAqB,UAArB,EAAiCnB,IAAI,CAACoB,SAAL,CAAerB,YAAf,CAAjC;AACEH,MAAAA,UAAU,CAAC,UAAD,EAAaH,kBAAb,CAAV;AACF;AAED,GAzBD;;AA2BA,QAAM0C,WAAW,GAAG,MAAM;AACzBhD,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAJ,IAAAA,aAAa,CAAC,KAAD,CAAb;AAEA,QAAIgB,YAAJ;;AAEA,QAAIX,UAAJ,EAAgB;AACfW,MAAAA,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAf;AACA,KAFD,MAEO;AACNJ,MAAAA,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAf;AACA;;AAEDJ,IAAAA,YAAY,CAACgC,GAAb,CAAiB,UAASC,IAAT,EAAe;AAC/B,UAAIA,IAAI,CAACf,EAAL,KAAYjC,SAAhB,EAA2B;AAC1BW,QAAAA,YAAY,CAACY,OAAb,CAAqBC,KAArB,GAA6BwB,IAAI,CAACjB,OAAlC;AACA;AACD,KAJD;AAMA,GAlBD;;AAoBA,QAAMN,aAAa,GAAG,MAAM;AAC3B,QAAIV,YAAJ;;AAEA,QAAIX,UAAJ,EAAgB;AACfW,MAAAA,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAf;AACA,KAFD,MAEO;AACNJ,MAAAA,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAf;AACA;;AAEDJ,IAAAA,YAAY,CAACgC,GAAb,CAAiB,UAASC,IAAT,EAAe;AAC/B,UAAIA,IAAI,CAACf,EAAL,KAAYjC,SAAhB,EAA2B;AAC1BgD,QAAAA,IAAI,CAACjB,OAAL,GAAepB,YAAY,CAACY,OAAb,CAAqBC,KAApC;AACA;AACD,KAJD;;AAMA,QAAIpB,UAAJ,EAAgB;AACfc,MAAAA,YAAY,CAACiB,OAAb,CAAqB,SAArB,EAAgCnB,IAAI,CAACoB,SAAL,CAAerB,YAAf,CAAhC;AACEH,MAAAA,UAAU,CAAC,SAAD,EAAYL,iBAAZ,CAAV;AACF,KAHD,MAGO;AACNW,MAAAA,YAAY,CAACiB,OAAb,CAAqB,UAArB,EAAiCnB,IAAI,CAACoB,SAAL,CAAerB,YAAf,CAAjC;AACEH,MAAAA,UAAU,CAAC,UAAD,EAAaH,kBAAb,CAAV;AACF;;AAEDN,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AAEAQ,IAAAA,YAAY,CAACY,OAAb,CAAqBC,KAArB,GAA6B,EAA7B;AACA,GA1BD;;AA4BA,QAAM4B,QAAQ,GAAG,MAAM;AACtBzC,IAAAA,YAAY,CAACY,OAAb,CAAqB8B,SAArB,GAAiCC,MAAM,CAACC,aAAP,CAAqB,OAArB,CAAjC;AACA,GAFD;;AAIA,sBACC;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,eAEEzD,UAAU,iBACV,QAAC,KAAD;AACC,MAAA,cAAc,EAAEJ,cADjB;AAEC,MAAA,cAAc,EAAEE,cAFjB;AAGC,MAAA,aAAa,EAAEkD,aAHhB;AAIC,MAAA,WAAW,EAAEK;AAJd;AAAA;AAAA;AAAA;AAAA,YAHF,eAUC,QAAC,KAAD;AACC,MAAA,aAAa,EAAE9C,aADhB;AAEC,MAAA,UAAU,EAAED;AAFb;AAAA;AAAA;AAAA;AAAA,YAVD,eAcC;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AACC,QAAA,SAAS,EAAC,WADX;AAEC,QAAA,GAAG,EAAEM,WAFN;AAAA,+BAIC;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,qBACEN,UAAU,IAAIE,cAAc,CAACyC,GAAf,CAAoBC,IAAD,iBACjC;AACC,YAAA,SAAS,EAAC,iBADX;AAAA,mCAGC;AACC,cAAA,SAAS,EAAC,sBADX;AAEC,cAAA,OAAO,EAAG3B,CAAD,IAAOqB,WAAW,CAACrB,CAAD,EAAI2B,IAAI,CAACf,EAAT,CAF5B;AAAA,sCAIC;AAAM,gBAAA,SAAS,EAAC,iBAAhB;AAAA,0BACEe,IAAI,CAACjB;AADP;AAAA;AAAA;AAAA;AAAA,sBAJD,eAOC;AAAK,gBAAA,SAAS,EAAC,yBAAf;AAAA,uCACC;AAAM,kBAAA,SAAS,EAAC,iBAAhB;AAAA,4BAEEiB,IAAI,CAACnB;AAFP;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,sBAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAHD;AAAA;AAAA;AAAA;AAAA,kBADc,CADhB,EAsBE,CAACzB,UAAD,IAAeI,eAAe,CAACuC,GAAhB,CAAqBC,IAAD,iBACnC;AACC,YAAA,SAAS,EAAC,iBADX;AAAA,mCAGC;AACC,cAAA,SAAS,EAAC,sBADX;AAEC,cAAA,OAAO,EAAG3B,CAAD,IAAOqB,WAAW,CAACrB,CAAD,EAAI2B,IAAI,CAACf,EAAT,CAF5B;AAAA,sCAIC;AAAM,gBAAA,SAAS,EAAC,iBAAhB;AAAA,0BACEe,IAAI,CAACjB;AADP;AAAA;AAAA;AAAA;AAAA,sBAJD,eAOC;AAAK,gBAAA,SAAS,EAAC,yBAAf;AAAA,uCACC;AAAM,kBAAA,SAAS,EAAC,iBAAhB;AAAA,4BAEEiB,IAAI,CAACnB;AAFP;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,sBAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAHD;AAAA;AAAA;AAAA;AAAA,kBADe,CAtBjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAJD;AAAA;AAAA;AAAA;AAAA,cAFD,eAmDC,QAAC,MAAD;AACC,QAAA,QAAQ,EAAEuB,QADX;AAEC,QAAA,YAAY,EAAEzC,YAFf;AAGC,QAAA,UAAU,EAAES,UAHb;AAIC,QAAA,UAAU,EAAEhB;AAJb;AAAA;AAAA;AAAA;AAAA,cAnDD;AAAA;AAAA;AAAA;AAAA;AAAA,YAdD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA2EA,CAxOD;;GAAMX,I;;KAAAA,I;AA0ON,eAAeA,IAAf","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\n\nimport Header from './Header/Header'\nimport Footer from './Footer/Footer'\nimport Aside from './Aside/Aside'\nimport PopUP from './PopUP/PopUP'\n\nimport './Body.scss';\n\nconst Body = () => {\n\n\tconst [mousePositionX, setMousePositionX] = useState();\n\tconst [mousePositionY, setMousePositionY] = useState();\n\tconst [statePopUp, setStatePopUp] = useState(false);\n\tconst [whatClick, setWhatClick] = useState(null);\n\n\tconst [editTextState, setEditTextState] = useState(false);\n\n\tconst [switchСhat , setSwitchChat] = useState(true);\n\tconst [funChatHistory, setFunChatHistory] = useState([]);\n\tconst [workChatHistory, setWorkChatHistory] = useState([]);\n\n\tconst mainBodyRef = useRef(null);\n\tconst inputMessage = useRef(null);\n\n\tuseEffect(() => {\n\t\tif (switchСhat) { \n\t\t\trenderData('workChat', setWorkChatHistory);\n\t\t}\n\t\t\trenderData('funChat', setFunChatHistory);\n  }, []);\n\n\tconst renderData = (key, setType ) => {\n\t\tlet localHistory = JSON.parse(localStorage.getItem(key));\n\t\t!!localHistory && setType(localHistory);\n\t};\n\n\tconst addMessage = (e) => {\n\t\tif (e.key === 'Enter') {\n\t\t\te.preventDefault();\n\t\t\tif (!inputMessage.current.value) { return; }\n\n\t\t\tif (editTextState) { \n\t\t\t\tediterMessage();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (switchСhat) { \n\t\t\t\tsetData(funChatHistory, setFunChatHistory, 'funChat', e);\n\t\t\t} else {\n\t\t\tsetData(workChatHistory, setWorkChatHistory, 'workChat', e);\n\t\t\t}\n\n\t\t\tinputMessage.current.value = '';\n\t\t}\n\t};\n\n\tconst setData = (typeChat, setTypeChat, key, e) => {\n\t\tsetTypeChat([\n\t\t\t...typeChat, \n\t\t\t{\n\t\t\t\tdate: giveDate(), \n\t\t\t\tmessage: e.target.value,\n\t\t\t\tid: typeChat.length,\n\t\t\t},\n\t\t]);\n\n\t\tlocalStorage.setItem(key, JSON.stringify(typeChat));\n\t};\n\n\tconst giveDate = () => {\n\t\tconst date = new Date();\n\t\tconst hour = date.getHours();\n\t\tconst min = date.getMinutes();\n\n\t\treturn (`${hour}:${min}`);\n\t};\n\n\tconst createPopUp = (e, id) => {\n\t\tsetWhatClick(id);\n\n\t\tsetMousePositionX(`${e.nativeEvent.pageX}px`);\n\t\tsetMousePositionY(`${e.nativeEvent.pageY}px`);\n\n\t\tsetStatePopUp(true);\n\t};\n\n\tconst deleteMessage = () => {\n\t\tsetStatePopUp(false);\n\t\tlet localHistory;\n\n\t\tif (switchСhat) {\n\t\t\tlocalHistory = JSON.parse(localStorage.getItem('funChat'));\n\t\t} else {\n\t\t\tlocalHistory = JSON.parse(localStorage.getItem('workChat'));\n\t\t}\n\n\t\tlocalHistory.map(function(item, index) {\n\t\t\tif (item.id === whatClick) {\n\t\t\t\tlocalHistory.splice(index, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\n\t\tif (switchСhat) {\n\t\t\tlocalStorage.setItem('funChat', JSON.stringify(localHistory));  \n \t \t\trenderData('funChat', setFunChatHistory); \n\t\t} else {\n\t\t\tlocalStorage.setItem('workChat', JSON.stringify(localHistory));  \n \t \t\trenderData('workChat', setWorkChatHistory); \n\t\t}\n\n\t};\n\n\tconst editMessage = () => {\n\t\tsetEditTextState(true);\n\t\tsetStatePopUp(false);\n\n\t\tlet localHistory;\n\n\t\tif (switchСhat) {\n\t\t\tlocalHistory = JSON.parse(localStorage.getItem('funChat'));\n\t\t} else {\n\t\t\tlocalHistory = JSON.parse(localStorage.getItem('workChat'));\n\t\t}\n\t\n\t\tlocalHistory.map(function(item) {\n\t\t\tif (item.id === whatClick) {\n\t\t\t\tinputMessage.current.value = item.message;\n\t\t\t}\n\t\t});\n\n\t};\n\n\tconst editerMessage = () => {\n\t\tlet localHistory;\n\n\t\tif (switchСhat) {\n\t\t\tlocalHistory = JSON.parse(localStorage.getItem('funChat'));\n\t\t} else {\n\t\t\tlocalHistory = JSON.parse(localStorage.getItem('workChat'));\n\t\t}\n\n\t\tlocalHistory.map(function(item) {\n\t\t\tif (item.id === whatClick) {\n\t\t\t\titem.message = inputMessage.current.value;\n\t\t\t}\n\t\t});\n\t\t\n\t\tif (switchСhat) {\n\t\t\tlocalStorage.setItem('funChat', JSON.stringify(localHistory));  \n \t \t\trenderData('funChat', setFunChatHistory); \n\t\t} else {\n\t\t\tlocalStorage.setItem('workChat', JSON.stringify(localHistory));  \n \t \t\trenderData('workChat', setWorkChatHistory); \n\t\t}\n\n\t\tsetEditTextState(false);\n\n\t\tinputMessage.current.value = '';\n\t}\n\n\tconst addSmile = () => {\n\t\tinputMessage.current.innerText = String.fromCodePoint(0x1F354); \n\t}\n\n\treturn (\n\t\t<div className=\"wrapper-main\">\n\t\t\t{\n\t\t\t\tstatePopUp && \n\t\t\t\t<PopUP\n\t\t\t\t\tmousePositionX={mousePositionX}\n\t\t\t\t\tmousePositionY={mousePositionY}\n\t\t\t\t\tdeleteMessage={deleteMessage}\n\t\t\t\t\teditMessage={editMessage}\n\t\t\t\t/>\n\t\t\t}\n\t\t\t<Aside\n\t\t\t\tsetSwitchChat={setSwitchChat}\n\t\t\t\tswitchСhat={switchСhat}\n\t\t\t/>\n\t\t\t<div className=\"wrapper-header-body\">\n\t\t\t\t<Header/>\n\t\t\t\t<div \n\t\t\t\t\tclassName=\"main-body\"\n\t\t\t\t\tref={mainBodyRef}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"wrapper-main-body\">\n\t\t\t\t\t\t{switchСhat && funChatHistory.map((item) => (\n\t\t\t\t\t\t\t<div \n\t\t\t\t\t\t\t\tclassName=\"wrapper-message\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div \n\t\t\t\t\t\t\t\t\tclassName=\"wrapper-message-text\"\n\t\t\t\t\t\t\t\t\tonClick={(e) => createPopUp(e, item.id)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span className=\"text-in-message\">\n\t\t\t\t\t\t\t\t\t\t{item.message}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<div className=\"wrapper-time-in-message\">\n\t\t\t\t\t\t\t\t\t\t<span className=\"time-in-message\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{item.date}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))} \n\n\t\t\t\t\t\t{!switchСhat && workChatHistory.map((item) => (\n\t\t\t\t\t\t\t<div \n\t\t\t\t\t\t\t\tclassName=\"wrapper-message\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div \n\t\t\t\t\t\t\t\t\tclassName=\"wrapper-message-text\"\n\t\t\t\t\t\t\t\t\tonClick={(e) => createPopUp(e, item.id)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span className=\"text-in-message\">\n\t\t\t\t\t\t\t\t\t\t{item.message}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<div className=\"wrapper-time-in-message\">\n\t\t\t\t\t\t\t\t\t\t<span className=\"time-in-message\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{item.date}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))} \t\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<Footer\n\t\t\t\t\taddSmile={addSmile}\n\t\t\t\t\tinputMessage={inputMessage}\n\t\t\t\t\taddMessage={addMessage}\n\t\t\t\t\tswitchСhat={switchСhat}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Body;"]},"metadata":{},"sourceType":"module"}