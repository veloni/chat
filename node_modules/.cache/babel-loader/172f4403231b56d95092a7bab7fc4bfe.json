{"ast":null,"code":"var _jsxFileName = \"/home/egor/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Chat/my-app/src/components/Body/Body.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport Header from './Header/Header';\nimport Footer from './Footer/Footer';\nimport Aside from './Aside/Aside';\nimport PopUpEditMessage from './PopUpEditMessage/PopUpEditMessage';\nimport PopUpSelectSmile from './PopUpSelectSmile/PopUpSelectSmile';\nimport sticker from './sticker/sticker.png';\nimport './Body.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Body = () => {\n  _s();\n\n  const [mousePositionX, setMousePositionX] = useState(null);\n  const [mousePositionY, setMousePositionY] = useState(null);\n  const [statePopUpEditMessage, setStatePopUpEditMessage] = useState(false);\n  const [statePopUpSelectSmile, setStatePopUpSelectSmile] = useState(false);\n  const [switchСhat, setSwitchChat] = useState(true);\n  const [whatClick, setWhatClick] = useState(null);\n  const [editTextState, setEditTextState] = useState(false);\n  const [heightScroll, setHeightScroll] = useState(null);\n  const [funChatHistory, setFunChatHistory] = useState([]);\n  const [workChatHistory, setWorkChatHistory] = useState([]);\n  const mainBodyRef = useRef(null);\n  const inputMessage = useRef(null);\n  useEffect(() => {\n    console.log(mainBodyRef.current.scrollHeight);\n    setHeightScroll(12321);\n    scrollToBottom();\n  });\n  useEffect(() => {\n    renderData('workChat', setWorkChatHistory);\n  }, []);\n  useEffect(() => {\n    renderData('funChat', setFunChatHistory);\n  }, []);\n\n  const renderData = (key, setType) => {\n    const localHistory = JSON.parse(localStorage.getItem(key));\n    !!localHistory && setType(localHistory);\n  };\n\n  const addMessage = e => {\n    loadLocalStorage();\n\n    if (e.key === 'Enter') {\n      e.preventDefault();\n\n      if (!inputMessage.current.value) {\n        return;\n      }\n\n      if (editTextState) {\n        editerMessage();\n        return;\n      }\n\n      if (switchСhat) {\n        setData(funChatHistory, setFunChatHistory, 'funChat', e);\n      } else {\n        setData(workChatHistory, setWorkChatHistory, 'workChat', e);\n      }\n\n      scrollToBottom();\n      inputMessage.current.value = '';\n    }\n  };\n\n  const setData = (typeChat, setTypeChat, key, e) => {\n    setTypeChat([...typeChat, {\n      date: giveDate(),\n      message: e.target.value,\n      isImg: false,\n      id: typeChat.length\n    }]);\n  };\n\n  const addSticker = () => {\n    if (switchСhat) {\n      setDataSticker(funChatHistory, setFunChatHistory, 'funChat');\n    } else {\n      setDataSticker(workChatHistory, setWorkChatHistory, 'workChat');\n    }\n\n    scrollToBottom();\n  };\n\n  const setDataSticker = (typeChat, setTypeChat, key) => {\n    setTypeChat([...typeChat, {\n      date: giveDate(),\n      message: sticker,\n      isImg: true,\n      id: typeChat.length\n    }]);\n  };\n\n  const giveDate = () => {\n    const date = new Date();\n    const hour = date.getHours();\n    let min = date.getMinutes();\n\n    if (min < 10) {\n      min = `0${min}`;\n    }\n\n    ;\n    return `${hour}:${min}`;\n  };\n\n  const createPopUp = (e, id) => {\n    setWhatClick(id);\n    setMousePositionX(`${e.nativeEvent.pageX}px`);\n    setMousePositionY(`${e.nativeEvent.pageY}px`);\n    setStatePopUpEditMessage(true);\n  };\n\n  const deleteMessage = () => {\n    setStatePopUpEditMessage(false);\n    let localHistory;\n\n    if (switchСhat) {\n      localHistory = JSON.parse(localStorage.getItem('funChat'));\n    } else {\n      localHistory = JSON.parse(localStorage.getItem('workChat'));\n    }\n\n    localHistory.map(function (item, index) {\n      if (item.id === whatClick) {\n        localHistory.splice(index, 1);\n        return;\n      }\n    });\n\n    if (switchСhat) {\n      localStorage.setItem('funChat', JSON.stringify(localHistory));\n      renderData('funChat', setFunChatHistory);\n    } else {\n      localStorage.setItem('workChat', JSON.stringify(localHistory));\n      renderData('workChat', setWorkChatHistory);\n    }\n  };\n\n  const editMessage = () => {\n    setEditTextState(true);\n    setStatePopUpEditMessage(false);\n    let localHistory;\n\n    if (switchСhat) {\n      localHistory = JSON.parse(localStorage.getItem('funChat'));\n    } else {\n      localHistory = JSON.parse(localStorage.getItem('workChat'));\n    }\n\n    localHistory.map(function (item) {\n      if (item.isImg === true) {\n        return;\n      }\n\n      if (item.id === whatClick) {\n        inputMessage.current.value = item.message;\n      }\n    });\n  };\n\n  const editerMessage = () => {\n    let localHistory;\n\n    if (switchСhat) {\n      localHistory = JSON.parse(localStorage.getItem('funChat'));\n    } else {\n      localHistory = JSON.parse(localStorage.getItem('workChat'));\n    }\n\n    localHistory.map(function (item) {\n      if (item.id === whatClick) {\n        item.message = inputMessage.current.value;\n      }\n    });\n\n    if (switchСhat) {\n      localStorage.setItem('funChat', JSON.stringify(localHistory));\n      renderData('funChat', setFunChatHistory);\n    } else {\n      localStorage.setItem('workChat', JSON.stringify(localHistory));\n      renderData('workChat', setWorkChatHistory);\n    }\n\n    closeEditor();\n  };\n\n  const closeEditor = () => {\n    setEditTextState(false);\n    inputMessage.current.value = '';\n  };\n\n  const addSmile = emoji => {\n    inputMessage.current.value = inputMessage.current.value + String.fromCodePoint(emoji);\n  };\n\n  const scrollToBottom = () => {\n    mainBodyRef.current.scroll(0, heightScroll);\n  };\n\n  const loadLocalStorage = () => {\n    localStorage.setItem('funChat', JSON.stringify(funChatHistory));\n    localStorage.setItem('workChat', JSON.stringify(workChatHistory));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper-main\",\n    children: [statePopUpEditMessage && /*#__PURE__*/_jsxDEV(PopUpEditMessage, {\n      mousePositionX: mousePositionX,\n      mousePositionY: mousePositionY,\n      deleteMessage: deleteMessage,\n      editMessage: editMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Aside, {\n      setSwitchChat: setSwitchChat,\n      switchСhat: switchСhat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper-header-body\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-body\",\n        ref: mainBodyRef,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper-main-body\",\n          children: [switchСhat && funChatHistory.map((item, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrapper-message\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wrapper-message-text\",\n              onClick: e => createPopUp(e, item.id),\n              children: [!item.isImg && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-in-message\",\n                children: item.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 11\n              }, this), item.isImg && /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"wrapper-sticker\",\n                src: item.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wrapper-time-in-message\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"time-in-message\",\n                  children: item.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 9\n            }, this)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 8\n          }, this)), !switchСhat && workChatHistory.map((item, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrapper-message\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wrapper-message-text\",\n              onClick: e => createPopUp(e, item.id),\n              children: [!item.isImg && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-in-message\",\n                children: item.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 11\n              }, this), item.isImg && /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"wrapper-sticker\",\n                src: item.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wrapper-time-in-message\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"time-in-message\",\n                  children: item.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 9\n            }, this)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 8\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 5\n      }, this), statePopUpSelectSmile && /*#__PURE__*/_jsxDEV(PopUpSelectSmile, {\n        addSmile: addSmile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        loadLocalStorage: loadLocalStorage,\n        addMessage: addMessage,\n        statePopUpSelectSmile: statePopUpSelectSmile,\n        setStatePopUpSelectSmile: setStatePopUpSelectSmile,\n        inputMessage: inputMessage,\n        switchСhat: switchСhat,\n        addSticker: addSticker,\n        editTextState: editTextState,\n        closeEditor: closeEditor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Body, \"W8ri77Kil52ok1wZBHSV11X0FRY=\");\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["/home/egor/Документы/Chat/my-app/src/components/Body/Body.jsx"],"names":["React","useRef","useState","useEffect","Header","Footer","Aside","PopUpEditMessage","PopUpSelectSmile","sticker","Body","mousePositionX","setMousePositionX","mousePositionY","setMousePositionY","statePopUpEditMessage","setStatePopUpEditMessage","statePopUpSelectSmile","setStatePopUpSelectSmile","switchСhat","setSwitchChat","whatClick","setWhatClick","editTextState","setEditTextState","heightScroll","setHeightScroll","funChatHistory","setFunChatHistory","workChatHistory","setWorkChatHistory","mainBodyRef","inputMessage","console","log","current","scrollHeight","scrollToBottom","renderData","key","setType","localHistory","JSON","parse","localStorage","getItem","addMessage","e","loadLocalStorage","preventDefault","value","editerMessage","setData","typeChat","setTypeChat","date","giveDate","message","target","isImg","id","length","addSticker","setDataSticker","Date","hour","getHours","min","getMinutes","createPopUp","nativeEvent","pageX","pageY","deleteMessage","map","item","index","splice","setItem","stringify","editMessage","closeEditor","addSmile","emoji","String","fromCodePoint","scroll"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\n\nimport Header from './Header/Header';\nimport Footer from './Footer/Footer';\nimport Aside from './Aside/Aside';\nimport PopUpEditMessage from './PopUpEditMessage/PopUpEditMessage';\nimport PopUpSelectSmile from './PopUpSelectSmile/PopUpSelectSmile';\n\nimport sticker from './sticker/sticker.png';\n\nimport './Body.scss';\n\nconst Body = () => {\n\tconst [mousePositionX, setMousePositionX] = useState(null);\n\tconst [mousePositionY, setMousePositionY] = useState(null);\n\n\tconst [statePopUpEditMessage, setStatePopUpEditMessage] = useState(false);\n\tconst [statePopUpSelectSmile, setStatePopUpSelectSmile] = useState(false);\n\tconst [switchСhat , setSwitchChat] = useState(true);\n\tconst [whatClick, setWhatClick] = useState(null);\n\tconst [editTextState, setEditTextState] = useState(false);\n\n\tconst [heightScroll, setHeightScroll] = useState(null);\n\n\tconst [funChatHistory, setFunChatHistory] = useState([]);\n\tconst [workChatHistory, setWorkChatHistory] = useState([]);\n\n\tconst mainBodyRef = useRef(null);\n\tconst inputMessage = useRef(null);\n\n\tuseEffect(() => {\n\t\tconsole.log(mainBodyRef.current.scrollHeight);\n\t\tsetHeightScroll(12321);\n\t\tscrollToBottom();\n });\n\n\tuseEffect(() => {\n \t\trenderData('workChat', setWorkChatHistory);\n  }, []);\n\n\tuseEffect(() => {\n\t\trenderData('funChat', setFunChatHistory); \n  }, []);\n\n\tconst renderData = (key, setType ) => {\n\t\tconst localHistory = JSON.parse(localStorage.getItem(key));\n\t\t!!localHistory && setType(localHistory);\n\t};\n\n\tconst addMessage = (e) => {\n\t\tloadLocalStorage();  \n\t\t\n\t\tif (e.key === 'Enter') {\n\t\t \te.preventDefault();\n\t\t\tif (!inputMessage.current.value) { return; }\n\n\t\t\tif (editTextState) { \n\t\t\t\tediterMessage();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (switchСhat) { \n\t\t\t\tsetData(funChatHistory, setFunChatHistory, 'funChat', e);\n\t\t\t} else { \n\t\t\tsetData(workChatHistory, setWorkChatHistory, 'workChat', e);\n\t\t \t} \n\t\t\tscrollToBottom();\n\n\t\t \tinputMessage.current.value = ''; \n\t\t}\n\t};\n\n\tconst setData = (typeChat, setTypeChat, key, e) => {\n\t\tsetTypeChat([\n\t\t\t...typeChat, \n\t\t\t{\n\t\t\t\tdate: giveDate(), \n\t\t\t\tmessage: e.target.value,\n\t\t\t\tisImg: false,\n\t\t\t\tid: typeChat.length,\n\t\t\t},\n\t\t]);\n\t};\n\n\tconst addSticker = () => {\n\t\tif (switchСhat) { \n\t\t\tsetDataSticker(funChatHistory, setFunChatHistory, 'funChat');\n\t\t} else {\n\t\t\tsetDataSticker(workChatHistory, setWorkChatHistory, 'workChat');\n\t\t}\n\n\t\tscrollToBottom();\n\t}\n\n\tconst setDataSticker = (typeChat, setTypeChat, key) => {\n\t\tsetTypeChat([\n\t\t\t...typeChat, \n\t\t\t{\n\t\t\t\tdate: giveDate(), \n\t\t\t\tmessage: sticker,\n\t\t\t\tisImg: true,\n\t\t\t\tid: typeChat.length,\n\t\t\t},\n\t\t]);\n\t};\n\n\tconst giveDate = () => {\n\t\tconst date = new Date();\n\t\tconst hour = date.getHours();\n\t\tlet min = date.getMinutes();\n\n \t\tif (min < 10) { min = `0${min}`}; \n\n\t\treturn (`${hour}:${min}`);\n\t};\n\n\tconst createPopUp = (e, id) => {\n\t\tsetWhatClick(id);\n\n\t\tsetMousePositionX(`${e.nativeEvent.pageX}px`);\n\t\tsetMousePositionY(`${e.nativeEvent.pageY}px`);\n\n\t\tsetStatePopUpEditMessage(true);\n\t};\n\n\tconst deleteMessage = () => {\n\t\tsetStatePopUpEditMessage(false);\n\t\tlet localHistory;\n\n\t\tif (switchСhat) {\n\t\t\tlocalHistory = JSON.parse(localStorage.getItem('funChat'));\n\t\t} else {\n\t\t\tlocalHistory = JSON.parse(localStorage.getItem('workChat'));\n\t\t}\n\n\t\tlocalHistory.map(function(item, index) {\n\t\t\tif (item.id === whatClick) {\n\t\t\t\tlocalHistory.splice(index, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\n\t\tif (switchСhat) {\n\t\t\tlocalStorage.setItem('funChat', JSON.stringify(localHistory));  \n \t \t\trenderData('funChat', setFunChatHistory); \n\t\t} else {\n\t\t\tlocalStorage.setItem('workChat', JSON.stringify(localHistory));  \n \t \t\trenderData('workChat', setWorkChatHistory); \n\t\t}\n\t};\n\n\tconst editMessage = () => {\n\t\tsetEditTextState(true);\n\t\tsetStatePopUpEditMessage(false);\n\n\t\tlet localHistory;\n\n\t\tif (switchСhat) {\n\t\t\tlocalHistory = JSON.parse(localStorage.getItem('funChat'));\n\t\t} else {\n\t\t\tlocalHistory = JSON.parse(localStorage.getItem('workChat'));\n\t\t}\n\t\n\t\tlocalHistory.map(function(item) {\n\t\t\tif (item.isImg === true) { \n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (item.id === whatClick) {\n\t\t\t\tinputMessage.current.value = item.message;\n\t\t\t}\n\t\t});\n\t};\n\n\tconst editerMessage = () => {\n\t\tlet localHistory;\n\n\t\tif (switchСhat) {\n\t\t\tlocalHistory = JSON.parse(localStorage.getItem('funChat'));\n\t\t} else {\n\t\t\tlocalHistory = JSON.parse(localStorage.getItem('workChat'));\n\t\t}\n\n\t\tlocalHistory.map(function(item) {\n\t\t\tif (item.id === whatClick) {\n\t\t\t\titem.message = inputMessage.current.value;\n\t\t\t}\n\t\t});\n\t\t\n\t\tif (switchСhat) {\n\t\t\tlocalStorage.setItem('funChat', JSON.stringify(localHistory));  \n \t \t\trenderData('funChat', setFunChatHistory); \n\t\t} else {\n\t\t\tlocalStorage.setItem('workChat', JSON.stringify(localHistory));  \n \t \t\trenderData('workChat', setWorkChatHistory); \n\t\t}\n\n\t\tcloseEditor();\n\t}\n\n\tconst closeEditor = () => {\n\t\tsetEditTextState(false);\n\t\tinputMessage.current.value = '';\n\t}\n\n\tconst addSmile = (emoji) => {\n\t\tinputMessage.current.value = inputMessage.current.value + String.fromCodePoint(emoji); \n\t}\n\n\tconst scrollToBottom = () => {\n\t\tmainBodyRef.current.scroll(0, heightScroll);\n\t}\n\t\n\tconst loadLocalStorage = () => {\n\t\tlocalStorage.setItem('funChat', JSON.stringify(funChatHistory));  \n\t\tlocalStorage.setItem('workChat', JSON.stringify(workChatHistory));\n\t}\n\n\treturn (\n\t\t<div className=\"wrapper-main\">\n\t\t\t{\n\t\t\t\tstatePopUpEditMessage && \n\t\t\t\t<PopUpEditMessage\n\t\t\t\t\tmousePositionX={mousePositionX}\n\t\t\t\t\tmousePositionY={mousePositionY}\n\t\t\t\t\tdeleteMessage={deleteMessage}\n\t\t\t\t\teditMessage={editMessage}\n\t\t\t\t/>\n\t\t\t}\n\t\t\t<Aside\n\t\t\t\tsetSwitchChat={setSwitchChat}\n\t\t\t\tswitchСhat={switchСhat}\n\t\t\t/>\n\t\t\t<div className=\"wrapper-header-body\">\n\t\t\t\t<Header/>\n\t\t\t\t<div \n\t\t\t\t\tclassName=\"main-body\"\n\t\t\t\t\tref={mainBodyRef}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"wrapper-main-body\">\n\t\t\t\t\t\t{switchСhat && funChatHistory.map((item, key) => (\n\t\t\t\t\t\t\t<div \n\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\tclassName=\"wrapper-message\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div \n\t\t\t\t\t\t\t\t\tclassName=\"wrapper-message-text\"\n\t\t\t\t\t\t\t\t\tonClick={(e) => createPopUp(e, item.id)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{\t\n\t\t\t\t\t\t\t\t\t\t!item.isImg &&\n\t\t\t\t\t\t\t\t\t\t<span className=\"text-in-message\">\n\t\t\t\t\t\t\t\t\t\t\t{item.message}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t{\t\n\t\t\t\t\t\t\t\t\t\titem.isImg && \n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tclassName=\"wrapper-sticker\"\n\t\t\t\t\t\t\t\t\t\tsrc={item.message}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t<div className=\"wrapper-time-in-message\">\n\t\t\t\t\t\t\t\t\t\t<span className=\"time-in-message\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{item.date}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))} \n\n\t\t\t\t\t\t{!switchСhat && workChatHistory.map((item, key) => (\n\t\t\t\t\t\t\t<div \n\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\tclassName=\"wrapper-message\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div \n\t\t\t\t\t\t\t\t\tclassName=\"wrapper-message-text\"\n\t\t\t\t\t\t\t\t\tonClick={(e) => createPopUp(e, item.id)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{\t\n\t\t\t\t\t\t\t\t\t\t!item.isImg &&\n\t\t\t\t\t\t\t\t\t\t<span className=\"text-in-message\">\n\t\t\t\t\t\t\t\t\t\t\t{item.message}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t{\t\n\t\t\t\t\t\t\t\t\t\titem.isImg && \n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"wrapper-sticker\"\n\t\t\t\t\t\t\t\t\t\t\tsrc={item.message}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t<div className=\"wrapper-time-in-message\">\n\t\t\t\t\t\t\t\t\t\t<span className=\"time-in-message\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{item.date}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))} \n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{\n\t\t\t\t\tstatePopUpSelectSmile && \n\t\t\t\t\t<PopUpSelectSmile\n\t\t\t\t\t\taddSmile={addSmile}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t<Footer\n\t\t\t\t\tloadLocalStorage={loadLocalStorage}\n\t\t\t\t\taddMessage={addMessage}\n\t\t\t\t\tstatePopUpSelectSmile={statePopUpSelectSmile}\n\t\t\t\t\tsetStatePopUpSelectSmile={setStatePopUpSelectSmile}\n\t\t\t\t\tinputMessage={inputMessage}\n\t\t\t\t\tswitchСhat={switchСhat}\n\t\t\t\t\taddSticker={addSticker}\n\t\t\t\t\teditTextState={editTextState}\n\t\t\t\t\tcloseEditor={closeEditor}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Body;"]},"metadata":{},"sourceType":"module"}