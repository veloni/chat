{"ast":null,"code":"var _jsxFileName = \"/home/egor/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Chat/my-app/src/components/Body/Body.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport Header from './Header/Header';\nimport Footer from './Footer/Footer';\nimport Aside from './Aside/Aside';\nimport './Body.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Body = () => {\n  _s();\n\n  const [switchСhat, setSwitchChat] = useState(true);\n  const [funChatHistory, setFunChatHistory] = useState([]);\n  const [workChatHistory, setWorkChatHistory] = useState([]);\n  useEffect(() => {\n    if (switchСhat) {\n      firstLoadData('workChat', setWorkChatHistory);\n    }\n\n    firstLoadData('funChat', setFunChatHistory);\n  }, []);\n\n  const firstLoadData = (key, setType) => {\n    let localHistory = JSON.parse(localStorage.getItem(key));\n    !!localHistory && setType(localHistory);\n  };\n\n  const addMessage = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n\n      if (switchСhat) {\n        setData(funChatHistory, setFunChatHistory, 'funChat', e);\n      } else {\n        setData(workChatHistory, setWorkChatHistory, 'workChat', e);\n      }\n    }\n  };\n\n  const setData = (typeChat, setTypeChat, key, e) => {\n    setTypeChat([...typeChat, {\n      date: giveDate(),\n      message: e.target.value\n    }]);\n    localStorage.setItem(key, JSON.stringify(typeChat));\n  };\n\n  const giveDate = () => {\n    const date = new Date();\n    const hour = date.getHours();\n    const min = date.getMinutes();\n    return `${hour}:${min}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper-main\",\n    children: [/*#__PURE__*/_jsxDEV(Aside, {\n      setSwitchChat: setSwitchChat,\n      switchСhat: switchСhat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper-header-body\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-body\",\n        children: [switchСhat && funChatHistory.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper-all-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }, this)), !switchСhat && workChatHistory.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"wrapper-message-text\",\n            children: item.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        addMessage: addMessage,\n        switchСhat: switchСhat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Body, \"RKS/Ntxu8Zq1xJL1EbPCSVQHLuA=\");\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["/home/egor/Документы/Chat/my-app/src/components/Body/Body.jsx"],"names":["React","useRef","useState","useEffect","Header","Footer","Aside","Body","switchСhat","setSwitchChat","funChatHistory","setFunChatHistory","workChatHistory","setWorkChatHistory","firstLoadData","key","setType","localHistory","JSON","parse","localStorage","getItem","addMessage","e","preventDefault","setData","typeChat","setTypeChat","date","giveDate","message","target","value","setItem","stringify","Date","hour","getHours","min","getMinutes","map","item"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\n\nimport Header from './Header/Header'\nimport Footer from './Footer/Footer'\nimport Aside from './Aside/Aside'\n\nimport './Body.scss';\n\nconst Body = () => {\n\tconst [switchСhat , setSwitchChat] = useState(true);\n\tconst [funChatHistory, setFunChatHistory] = useState([]);\n\tconst [workChatHistory, setWorkChatHistory] = useState([]);\n\n\tuseEffect(() => {\n\t\tif (switchСhat) { \n\t\t\tfirstLoadData('workChat', setWorkChatHistory);\n\t\t}\n\t\t\tfirstLoadData('funChat', setFunChatHistory);\n  }, []);\n\n\tconst firstLoadData = (key, setType ) => {\n\t\tlet localHistory = JSON.parse(localStorage.getItem(key));\n\t\t!!localHistory && setType(localHistory);\n\t};\n\n\tconst addMessage = (e) => {\n\t\tif (e.key === 'Enter') {\n\t\t\te.preventDefault();\n\t\t\tif (switchСhat) { \n\t\t\t\tsetData(funChatHistory, setFunChatHistory, 'funChat', e);\n\t\t\t} else {\n\t\t\tsetData(workChatHistory, setWorkChatHistory, 'workChat', e);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst setData = (typeChat, setTypeChat, key, e) => {\n\t\tsetTypeChat([\n\t\t\t...typeChat, \n\t\t\t{\n\t\t\t\tdate: giveDate(), \n\t\t\t\tmessage: e.target.value,\n\t\t\t},\n\t\t]);\n\t\tlocalStorage.setItem(key, JSON.stringify(typeChat));\n\t};\n\n\tconst giveDate = () => {\n\t\tconst date = new Date();\n\t\tconst hour = date.getHours();\n\t\tconst min = date.getMinutes();\n\n\t\treturn (`${hour}:${min}`);\n\t};\n\t\n\treturn (\n\t\t<div className=\"wrapper-main\">\n\t\t\t<Aside\n\t\t\t\tsetSwitchChat={setSwitchChat}\n\t\t\t\tswitchСhat={switchСhat}\n\t\t\t/>\n\t\t\t<div className=\"wrapper-header-body\">\n\t\t\t\t<Header/>\n\t\t\t\t<div className=\"main-body\">\n\t\t\t\t\t{switchСhat && funChatHistory.map((item) => (\n\t\t\t\t\t\t<div className=\"wrapper-all-message\">\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{item.message}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{item.date}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))} \n\n\t\t\t\t\t{!switchСhat && workChatHistory.map((item) => (\n\t\t\t\t\t\t<div className=\"wrapper-message\">\n\t\t\t\t\t\t\t<span className=\"wrapper-message-text\">\n\t\t\t\t\t\t\t\t{item.message}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{item.date}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))} \n\n\t\t\t\t</div>\n\n\t\t\t\t<Footer\n\t\t\t\t\taddMessage={addMessage}\n\t\t\t\t\tswitchСhat={switchСhat}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Body;"]},"metadata":{},"sourceType":"module"}